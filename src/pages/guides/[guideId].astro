---
import GuideHeader from '../../components/GuideHeader.astro';
import MarkdownFile from '../../components/MarkdownFile.astro';
import BaseLayout from '../../layouts/BaseLayout.astro';
import { TableOfContent } from '../../components/TableOfContent/TableOfContent';
import {
  getAllGuides,
  type GuideFileType,
  getGuideTableOfContent,
} from '../../lib/guide';
import { getOpenGraphImageUrl } from '../../lib/open-graph';

export interface Props {
  guide: GuideFileType;
}

export async function getStaticPaths() {
  const guides = (await getAllGuides()).filter(
    (guide) => !guide.frontmatter.excludedBySlug,
  );

  return guides.map((guide) => ({
    params: { guideId: guide.id },
    props: { guide },
  }));
}

const { guideId } = Astro.params;
const { guide } = Astro.props;
const { frontmatter: guideData, author } = guide;

const tableOfContent = getGuideTableOfContent(guide.getHeadings());

const ogImageUrl = getOpenGraphImageUrl({
  group: 'guides',
  resourceId: guideId,
});
---

<BaseLayout
  title={guideData.seo.title}
  description={guideData.seo.description}
  permalink={`/guides/${guideId}`}
  canonicalUrl={guideData.canonicalUrl}
  ogImageUrl={ogImageUrl}
>
  <GuideHeader guide={guide} />

  <div class='lg:grid lg:max-w-full lg:grid-cols-[1fr_minmax(0,700px)_1fr]'>
    <div class='py-0 lg:col-start-3 lg:col-end-4 lg:row-start-1 lg:py-10'>
      <TableOfContent toc={tableOfContent} client:load />
    </div>
    <div
      class='col-start-2 col-end-3 row-start-1 mx-auto max-w-[700px] border-r py-5 max-lg:border-none sm:py-10'
    >
      <MarkdownFile>
        <guide.Content />
      </MarkdownFile>
    </div>
  </div>
</BaseLayout>
